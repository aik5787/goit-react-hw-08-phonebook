{"version":3,"file":"static/js/201.af12cc03.chunk.js","mappings":"+SA+GA,UAjGqB,WACnB,OAAgCA,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,eAAOC,EAAP,KAAiBC,EAAjB,KAMMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACdR,GAAY,SAAAS,GAAQ,yBACfA,GADe,cAEjBb,EAAOY,GAFU,GAIrB,EAwCD,OACE,UAAC,KAAD,CAAKE,KAAK,QAAQC,GAAG,OAAOC,EAAE,IAAIC,GAAI,IAAtC,WACE,SAAC,IAAD,CAASC,GAAG,KAAKC,KAAK,KAAKC,GAAG,IAA9B,2BAGA,kBAAMC,SA3CW,SAAAX,GAEnB,GADAA,EAAEY,iBAEyB,KAAzBnB,EAASH,KAAKuB,QACY,KAA1BpB,EAASF,MAAMsB,QACc,KAA7BpB,EAASD,SAASqB,OAHpB,CAOA,IAAMC,EAAU,CACdxB,KAAMG,EAASH,KACfC,MAAOE,EAASF,MAChBC,SAAUC,EAASD,UAErBG,GAASoB,EAAAA,EAAAA,IAAOD,IACbE,SACAC,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACRA,EAASG,OACXC,IAAAA,OAAAA,QAAwB,mCACxBzB,EAAS,uCAETyB,IAAAA,OAAAA,QAAwB,gCACxBzB,EAAS,yCAGXH,EAAY,CACVJ,KAAM,GACNC,MAAO,GACPC,SAAU,IAEb,IACA+B,OAAM,SAAAC,GACLF,IAAAA,OAAAA,QAAwB,gCACxBH,QAAQK,MAAM,sBAAuBA,EACtC,GA3BF,CA4BF,EAOG,WACE,UAAC,KAAD,YACE,SAAC,IAAD,oBACA,SAAC,EAAAC,EAAD,CACEC,KAAK,OACLpC,KAAK,OACLY,MAAOT,EAASH,KAChBqC,SAAU5B,QAGd,UAAC,KAAD,YACE,SAAC,IAAD,qBACA,SAAC,EAAA0B,EAAD,CACEC,KAAK,QACLpC,KAAK,QACLY,MAAOT,EAASF,MAChBoC,SAAU5B,QAGd,UAAC,KAAD,YACE,SAAC,IAAD,wBACA,SAAC,EAAA0B,EAAD,CACEC,KAAK,WACLpC,KAAK,WACLY,MAAOT,EAASD,SAChBmC,SAAU5B,QAGd,SAAC,IAAD,CAAQ2B,KAAK,SAASE,YAAY,OAAOC,GAAG,IAA5C,0BAMP,C","sources":["components/Pages/Registration/Registration.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signUp } from '../../../redux/auth/thunk';\nimport Notiflix from 'notiflix';\nimport {\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Heading,\n  Box,\n} from '@chakra-ui/react';\n\nconst Registration = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      formData.name.trim() === '' ||\n      formData.email.trim() === '' ||\n      formData.password.trim() === ''\n    ) {\n      return;\n    }\n    const newUser = {\n      name: formData.name,\n      email: formData.email,\n      password: formData.password,\n    };\n    dispatch(signUp(newUser))\n      .unwrap()\n      .then(response => {\n        console.log(response);\n        if (response.token) {\n          Notiflix.Notify.success('User is successfully registered');\n          navigate('/goit-react-hw-08-phonebook/login');\n        } else {\n          Notiflix.Notify.failure('Registration is unsuccessful');\n          navigate('/goit-react-hw-08-phonebook/register');\n        }\n\n        setFormData({\n          name: '',\n          email: '',\n          password: '',\n        });\n      })\n      .catch(error => {\n        Notiflix.Notify.failure('Registration is unsuccessful');\n        console.error('Registration error:', error);\n      });\n  };\n\n  return (\n    <Box maxW=\"400px\" mx=\"auto\" p=\"4\" pt={100}>\n      <Heading as=\"h2\" size=\"lg\" mb=\"4\">\n        Registration\n      </Heading>\n      <form onSubmit={handleSubmit}>\n        <FormControl>\n          <FormLabel>Name</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel>Email</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        </FormControl>\n        <FormControl>\n          <FormLabel>Password</FormLabel>\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n        </FormControl>\n        <Button type=\"submit\" colorScheme=\"teal\" mt=\"4\">\n          Sign up\n        </Button>\n      </form>\n    </Box>\n  );\n};\n\nexport default Registration;\n\n// import { useState } from 'react';\n// import { useDispatch } from 'react-redux';\n// import { useNavigate } from 'react-router-dom';\n// import { signUp } from '../../../redux/auth/thunk';\n// import Notiflix from 'notiflix';\n\n// const Registration = () => {\n//   const [formData, setFormData] = useState({\n//     name: '',\n//     email: '',\n//     password: '',\n//   });\n\n//   const dispatch = useDispatch();\n//   const navigate = useNavigate();\n\n//   const handleChange = e => {\n//     const { name, value } = e.target;\n//     setFormData(prevData => ({\n//       ...prevData,\n//       [name]: value,\n//     }));\n//   };\n\n//   const handleSubmit = e => {\n//     e.preventDefault();\n//     if (\n//       formData.name.trim() === '' ||\n//       formData.email.trim() === '' ||\n//       formData.password.trim() === ''\n//     ) {\n//       return;\n//     }\n//     const newUser = {\n//       name: formData.name,\n//       email: formData.email,\n//       password: formData.password,\n//     };\n//     console.log(newUser);\n//     dispatch(signUp(newUser))\n//       .unwrap()\n//       .then(response => {\n//         console.log(response);\n//         if (response.token) {\n//           Notiflix.Notify.success('User is successfully registered');\n//           navigate('/goit-react-hw-08-phonebook/login');\n//         } else {\n//           Notiflix.Notify.failure('Registration is unsuccessful');\n//           navigate('/goit-react-hw-08-phonebook/register');\n//         }\n\n//         setFormData({\n//           name: '',\n//           email: '',\n//           password: '',\n//         });\n//       })\n//       .catch(error => {\n//         Notiflix.Notify.failure('Registration is unsuccesfull');\n//         console.error('Registration error:', error);\n//       });\n//   };\n\n//   return (\n//     <div>\n//       <h2>Registration</h2>\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Name:\n//           <input\n//             type=\"text\"\n//             name=\"name\"\n//             // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//             value={formData.name}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <label>\n//           Email:\n//           <input\n//             type=\"email\"\n//             name=\"email\"\n//             // pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}\"\n//             value={formData.email}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <label>\n//           Password:\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             // pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$\"\n//             value={formData.password}\n//             onChange={handleChange}\n//           />\n//         </label>\n//         <br />\n//         <button type=\"submit\">Sign up</button>\n//       </form>\n//     </div>\n//   );\n// };\n\n// export default Registration;\n"],"names":["useState","name","email","password","formData","setFormData","dispatch","useDispatch","navigate","useNavigate","handleChange","e","target","value","prevData","maxW","mx","p","pt","as","size","mb","onSubmit","preventDefault","trim","newUser","signUp","unwrap","then","response","console","log","token","Notiflix","catch","error","I","type","onChange","colorScheme","mt"],"sourceRoot":""}