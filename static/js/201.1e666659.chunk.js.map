{"version":3,"file":"static/js/201.1e666659.chunk.js","mappings":"qPA0GA,UApGqB,WACnB,OAAgCA,EAAAA,EAAAA,UAAS,CACvCC,KAAM,GACNC,MAAO,GACPC,SAAU,KAHZ,eAAOC,EAAP,KAAiBC,EAAjB,KAMMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,OAAlBX,EAAR,EAAQA,KAAMY,EAAd,EAAcA,MACdR,GAAY,SAAAS,GAAQ,yBACfA,GADe,cAEjBb,EAAOY,GAFU,GAIrB,EAyCD,OACE,4BACE,0CACA,kBAAME,SA1CW,SAAAJ,GAEnB,GADAA,EAAEK,iBAEyB,KAAzBZ,EAASH,KAAKgB,QACY,KAA1Bb,EAASF,MAAMe,QACc,KAA7Bb,EAASD,SAASc,OAHpB,CAOA,IAAMC,EAAU,CACdjB,KAAMG,EAASH,KACfC,MAAOE,EAASF,MAChBC,SAAUC,EAASD,UAErBgB,QAAQC,IAAIF,GACZZ,GAASe,EAAAA,EAAAA,IAAOH,IACbI,SACAC,MAAK,SAAAC,GACJL,QAAQC,IAAII,GACRA,EAASC,OACXC,IAAAA,OAAAA,QAAwB,mCACxBlB,EAAS,uCAETkB,IAAAA,OAAAA,QAAwB,gCACxBlB,EAAS,yCAGXH,EAAY,CACVJ,KAAM,GACNC,MAAO,GACPC,SAAU,IAEb,IACAwB,OAAM,SAAAC,GACLF,IAAAA,OAAAA,QAAwB,gCACxBP,QAAQS,MAAM,sBAAuBA,EACtC,GA5BF,CA6BF,EAKG,WACE,sCAEE,kBACEC,KAAK,OACL5B,KAAK,OAELY,MAAOT,EAASH,KAChB6B,SAAUpB,QAGd,mBACA,uCAEE,kBACEmB,KAAK,QACL5B,KAAK,QAELY,MAAOT,EAASF,MAChB4B,SAAUpB,QAGd,mBACA,0CAEE,kBACEmB,KAAK,WACL5B,KAAK,WAELY,MAAOT,EAASD,SAChB2B,SAAUpB,QAGd,mBACA,mBAAQmB,KAAK,SAAb,0BAIP,C","sources":["components/Pages/Registration/Registration.js"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { signUp } from '../../../redux/auth/thunk';\nimport Notiflix from 'notiflix';\n\nconst Registration = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    password: '',\n  });\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (\n      formData.name.trim() === '' ||\n      formData.email.trim() === '' ||\n      formData.password.trim() === ''\n    ) {\n      return;\n    }\n    const newUser = {\n      name: formData.name,\n      email: formData.email,\n      password: formData.password,\n    };\n    console.log(newUser);\n    dispatch(signUp(newUser))\n      .unwrap()\n      .then(response => {\n        console.log(response);\n        if (response.token) {\n          Notiflix.Notify.success('User is successfully registered');\n          navigate('/goit-react-hw-08-phonebook/login');\n        } else {\n          Notiflix.Notify.failure('Registration is unsuccessful');\n          navigate('/goit-react-hw-08-phonebook/register');\n        }\n\n        setFormData({\n          name: '',\n          email: '',\n          password: '',\n        });\n      })\n      .catch(error => {\n        Notiflix.Notify.failure('Registration is unsuccesfull');\n        console.error('Registration error:', error);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Registration</h2>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Name:\n          <input\n            type=\"text\"\n            name=\"name\"\n            // pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            value={formData.name}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Email:\n          <input\n            type=\"email\"\n            name=\"email\"\n            // pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}\"\n            value={formData.email}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <label>\n          Password:\n          <input\n            type=\"password\"\n            name=\"password\"\n            // pattern=\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$\"\n            value={formData.password}\n            onChange={handleChange}\n          />\n        </label>\n        <br />\n        <button type=\"submit\">Sign up</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Registration;\n"],"names":["useState","name","email","password","formData","setFormData","dispatch","useDispatch","navigate","useNavigate","handleChange","e","target","value","prevData","onSubmit","preventDefault","trim","newUser","console","log","signUp","unwrap","then","response","token","Notiflix","catch","error","type","onChange"],"sourceRoot":""}